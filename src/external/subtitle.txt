WEBVTT
Kind: captions
Language: en

00:00:05.400 --> 00:00:08.240
In this section of the course,&nbsp;
I'll be covering how to interact&nbsp;&nbsp;

00:00:08.240 --> 00:00:10.518
with databases from a Java application.

00:00:11.554 --> 00:00:13.937
I'll be primarily focusing on connecting to,

00:00:13.937 --> 00:00:16.272
and communicating with a relational database.

00:00:17.232 --> 00:00:19.105
I'll show you how to connect to a database,

00:00:19.105 --> 00:00:24.680
using a connection string, and a special&nbsp;
object, called a Java Database Driver.&nbsp;

00:00:24.680 --> 00:00:27.760
We'll get information from the&nbsp;
database, through a database&nbsp;&nbsp;

00:00:27.760 --> 00:00:33.960
language called Structured Query Language or SQL.
I'll demonstrate how to execute SQL statements as&nbsp;&nbsp;

00:00:33.960 --> 00:00:39.000
strings against tables in the database, using&nbsp;
Java's support, and how to process the results&nbsp;&nbsp;

00:00:39.000 --> 00:00:43.960
we get back from these types of queries.
I'll also cover executing parameterized&nbsp;&nbsp;

00:00:43.960 --> 00:00:49.040
statements, using Java's PreparedStatement,&nbsp;
which allow SQL statements to be reusable,&nbsp;&nbsp;

00:00:49.040 --> 00:00:54.440
more flexible, and less prone to&nbsp;
some well known security issues.&nbsp;

00:00:54.440 --> 00:00:59.400
Many Database Management Systems support&nbsp;
a built-in procedural language as well.&nbsp;

00:00:59.400 --> 00:01:03.640
This means there may be functions stored with&nbsp;
the database, that you can use to get data,&nbsp;&nbsp;

00:01:03.640 --> 00:01:08.600
or perform some action, rather than&nbsp;
actually writing SQL code to do it.&nbsp;

00:01:08.600 --> 00:01:12.080
I'll be showing you how to make calls&nbsp;
to these database stored procedures,&nbsp;&nbsp;

00:01:12.080 --> 00:01:14.680
with Java's CallableStatement.&nbsp;

00:01:14.680 --> 00:01:19.440
Finally, we'll examine different object&nbsp;
relational mapping or ORM technologies,&nbsp;&nbsp;

00:01:19.440 --> 00:01:25.880
used by popular Java frameworks, to handle&nbsp;
basic boiler plate interactions with databases.&nbsp;

00:01:25.880 --> 00:01:29.840
To do all of this, we'll need&nbsp;
a database to test against.&nbsp;

00:01:31.000 --> 00:01:35.280
I originally was using SQLite for this section&nbsp;
of the course, but have decided to switch to&nbsp;&nbsp;

00:01:35.280 --> 00:01:39.200
MySQL for several reasons.
There were other options,&nbsp;&nbsp;

00:01:39.200 --> 00:01:44.720
like selecting an in memory database like H2.
Or I could have chosen alternative relational&nbsp;&nbsp;

00:01:44.720 --> 00:01:49.200
databases like PostGreSQL which is&nbsp;
free and open source, or Microsoft's&nbsp;&nbsp;

00:01:49.200 --> 00:01:51.440
SQL Server which has a free version.

00:01:52.433 --> 00:01:54.844
I decided on MySQL for several reasons.

00:01:55.880 --> 00:02:01.960
First, It's free, and downloaded from Oracle,&nbsp;
and the installation isn't too difficult.&nbsp;

00:02:01.960 --> 00:02:06.640
Second, I think it's important to learn about&nbsp;
CallableStatements, and for that, we needed a&nbsp;&nbsp;

00:02:06.640 --> 00:02:11.680
database that support stored procedures.
There are work arounds for H2 and SQLite,&nbsp;&nbsp;

00:02:12.200 --> 00:02:16.440
but I felt the work arounds might&nbsp;
have been more confusing to students.&nbsp;

00:02:16.440 --> 00:02:20.520
Third, I offer a beginner's course&nbsp;
in SQL which also uses MySQL,&nbsp;&nbsp;

00:02:20.520 --> 00:02:25.320
so if you want to learn more, you'll be&nbsp;
in a perfect position to take that course.&nbsp;

00:02:25.320 --> 00:02:28.453
Finally, MySQL is a popular industry standard.

00:02:30.600 --> 00:02:32.674
On this slide, I'm showing you several surveys

00:02:32.674 --> 00:02:38.680
of the popularity of market place databases.
The first is stackoverflow's annual survey which&nbsp;&nbsp;

00:02:38.680 --> 00:02:43.080
solicits feedback from developers,&nbsp;
on what they use professionally.&nbsp;

00:02:43.080 --> 00:02:47.440
This survey is limited to respondents, so it could&nbsp;
be argued it's skewed towards professionals who&nbsp;&nbsp;

00:02:47.440 --> 00:02:52.440
are just more likely to take such a survey.
The second is from Statista,&nbsp;&nbsp;

00:02:52.440 --> 00:02:57.320
and the third from DB-Engines, which&nbsp;
are similar and have similar results.&nbsp;

00:02:57.320 --> 00:03:01.000
The last survey polls the internet for&nbsp;
monthly statistics, using the number of&nbsp;&nbsp;

00:03:01.000 --> 00:03:06.000
mentions of the system on websites, the frequency&nbsp;
of technical discussions, and the number of job&nbsp;&nbsp;

00:03:06.000 --> 00:03:10.680
offers as part of their scoring system.
Make sure to check out these surveys,&nbsp;&nbsp;

00:03:10.680 --> 00:03:15.600
and others if you're interested, or if you're&nbsp;
trying to make this decision for yourself.&nbsp;

00:03:15.600 --> 00:03:19.160
However you look at this feedback,&nbsp;
MySQL is squarely near the top,&nbsp;&nbsp;

00:03:19.160 --> 00:03:20.929
so that's another reason I chose it.

00:03:21.911 --> 00:03:23.454
Finally, just because the course will

00:03:23.454 --> 00:03:27.600
be taught using MySQL, this doesn't&nbsp;
mean that you have to use it.&nbsp;

00:03:27.600 --> 00:03:31.280
You're welcome to use whichever database you&nbsp;
want, especially if you have another already&nbsp;&nbsp;

00:03:31.280 --> 00:03:35.640
installed, and have experience there.
I'll be providing scripts to create&nbsp;&nbsp;

00:03:35.640 --> 00:03:41.520
a specific database schema, for MySQL,&nbsp;
which could be tweaked for your database.&nbsp;

00:03:41.520 --> 00:03:44.520
In addition, I'll show you several&nbsp;
different connection strings,&nbsp;&nbsp;

00:03:44.520 --> 00:03:49.840
to connect to different databases.
I'll be making an effort to use ANSI SQL,&nbsp;&nbsp;

00:03:49.840 --> 00:03:54.240
a standard set of commands, which&nbsp;
most databases should support.&nbsp;

00:03:54.240 --> 00:03:59.280
I'll try to avoid vendor specific SQL&nbsp;
statements, or point them out when I can.&nbsp;

00:03:59.280 --> 00:04:03.200
There are good reasons to use&nbsp;
ANSI SQL in your java code.&nbsp;

00:04:03.200 --> 00:04:08.920
Doing so, lets you swap the database engine,&nbsp;
by simply changing your connection string.&nbsp;

00:04:08.920 --> 00:04:13.440
This does sometimes happen, as corporations&nbsp;
decide the best way to house their data,&nbsp;&nbsp;

00:04:13.440 --> 00:04:19.040
based on their own unique situation, and as&nbsp;
technologies change and compete with one another.&nbsp;

00:04:19.040 --> 00:04:22.880
I'll explain all of this in&nbsp;
more detail as we proceed.&nbsp;

00:04:22.880 --> 00:04:26.400
Ok, so let's move forward.
The next three videos will be&nbsp;&nbsp;

00:04:26.400 --> 00:04:31.920
the MySQL installation videos, so pick the&nbsp;
one appropriate for your operating system.
