WEBVTT
Kind: captions
Language: en

00:00:05.417 --> 00:00:08.720
Okay, welcome back.
Now that you've had a quick

00:00:08.720 --> 00:00:14.080
overview of some database basics, we'll take a
closer look atMySQL Workbench, which you should

00:00:14.080 --> 00:00:19.600
have successfully installed along with MySQL.
If for some reason, you don't have this tool

00:00:19.600 --> 00:00:23.800
installed, and don't have access to
a similar tool, then please go back,

00:00:23.800 --> 00:00:28.025
and find the right installation video for your
operating system, and get that installed.


00:00:28.920 --> 00:00:33.027
There are multiple ways to communicate with
a database, and you don't need this tool.


00:00:33.840 --> 00:00:38.646
You can use the command line, usually through a
special shell provided by the database vendor.


00:00:39.480 --> 00:00:44.240
You can use software applications, and that's
our objective, to build a Java application

00:00:44.240 --> 00:00:48.960
that will interact with our database.
But using a special integrated development

00:00:48.960 --> 00:00:54.666
environment built for databases, does make life
easier, especially when trying to debug issues.


00:00:55.520 --> 00:00:59.286
MySQL Workbench is designed
for the MySQL database system.


00:01:00.160 --> 00:01:05.204
This means that it's a visual tool for database
design and administration, and SQL development.


00:01:06.160 --> 00:01:09.640
Let's take a quick tour.
If you haven't already,

00:01:09.640 --> 00:01:14.286
the first thing I want you to do is open MySQL
workbench, so you can see this Welcome page.


00:01:15.120 --> 00:01:18.699
Remember to start the service, if you
didn't set it to start automatically.


00:01:19.960 --> 00:01:23.960
You should have two connections on this
screen, if you followed the steps I showed,

00:01:23.960 --> 00:01:26.880
in the install videos.
You'll want to use the

00:01:26.880 --> 00:01:29.012
development connection, so pick that.


00:01:33.587 --> 00:01:36.319
When you log in with this connection, your left pane,

00:01:36.319 --> 00:01:41.600
will most likely be displaying Schemas.
Notice the tabs at the bottom, or the top of

00:01:41.600 --> 00:01:46.087
the left pane, which toggle between the
administration pane, and the schemas.


00:01:46.880 --> 00:01:51.347
In the install video, I already showed you how
to use a couple of the Administration Tasks.


00:01:52.160 --> 00:01:56.200
We looked at the server status, and
made changes to the dev user account,

00:01:56.200 --> 00:02:00.560
assigning the DBA role to this user.
For most of your work though,

00:02:00.560 --> 00:02:05.520
you'll be working with schemas.
You'll remember a schema, in MySQL,

00:02:05.520 --> 00:02:10.360
is another name for a database.
You may see some system databases,

00:02:10.360 --> 00:02:15.240
sys, for example, because dev user has
the DBA role, and therefore has access

00:02:15.240 --> 00:02:21.200
to elevated privileges, and critical schemas.
You'll want to ignore these, they're for use by

00:02:21.200 --> 00:02:24.800
the system, and you can cause serious
problems if you mess about with them,

00:02:24.800 --> 00:02:26.396
without first understanding them.


00:02:27.311 --> 00:02:30.495
My installation of MySQL, is showing these extra databases,

00:02:30.495 --> 00:02:33.471
because this is the same machine that I've previously recorded,

00:02:33.471 --> 00:02:35.358
MySQL for Beginner's course.

00:02:36.354 --> 00:02:38.618
A machine won't show these extra databases.

00:02:39.715 --> 00:02:43.242
In a minute, we'll be creating our own schema, or database,


00:02:43.384 --> 00:02:45.689
by importing a file that will build one for us.

00:02:46.760 --> 00:02:50.364
First, let's step back, and
see what this IDE provides.


00:02:51.320 --> 00:02:54.846
As you can see, there are a lot
of features in MySQL Workbench.


00:02:55.720 --> 00:02:58.865
In the main window, a tab
is open that says Query 1.


00:02:59.800 --> 00:03:03.566
This is where you'd type SQL commands,
and it works like a text editor.


00:03:04.440 --> 00:03:09.306
This pane has its own ribbon of buttons, along
the top here, with some functions we'll be using.


00:03:10.160 --> 00:03:12.787
We'll have a look at a couple
of these, in a moment.


00:03:13.560 --> 00:03:18.036
What I want you to do next, is select the
Administration tab, of the left panel.


00:03:19.480 --> 00:03:25.487
Before we continue, go to resources folder of
this video, and download the music_database.sql.


00:03:26.565 --> 00:03:33.280
This file was exported, using MySQL, and continues
all the SQL code needed to create a music schema,

00:03:33.280 --> 00:03:37.840
and several tables, as well as a view.
If you want to examine some Data

00:03:37.840 --> 00:03:41.960
Definition Language or DDL, this script
contains a series of it, that will get

00:03:41.960 --> 00:03:47.560
executed as part of the import process.
In other words, the file will get loaded,

00:03:47.560 --> 00:03:51.564
and these SQL queries executed, in the
order they're defined in this file.


00:03:52.520 --> 00:03:55.600
Let's import this.
Under the Administration

00:03:55.600 --> 00:04:00.566
tab, you'll see three categories,
Management, Instance, and Performance.


00:04:01.440 --> 00:04:04.905
Under Management, the last
option is Data Import Restore.


00:04:05.840 --> 00:04:08.560
Select that.
If you have the bottom

00:04:08.560 --> 00:04:13.387
panel or right panel open, you'll want to close
these, so you can see the form in its entirety.


00:04:14.200 --> 00:04:17.313
You do this by toggling the buttons in the right corner of this IDE.

00:04:18.248 --> 00:04:20.924
Optionally, you could turn off the left pane as well.

00:04:21.859 --> 00:04:24.224
I'll do this, so I have more screen space.


00:04:25.200 --> 00:04:28.717
By default, the Import from Dump
Project Folder is selected,

00:04:28.818 --> 00:04:33.247
but we want to select Import from Self contained file, the next radio button shown there.


00:04:34.040 --> 00:04:39.640
And you'll want to use the ellipse button to
find, and select, the music_database.sql file,

00:04:39.640 --> 00:04:44.480
you downloaded from the resources folder.
You have to know what's in your file, and this

00:04:44.480 --> 00:04:49.444
file includes the creation of the schema, so we
don't have to specify a default target schema.


00:04:50.359 --> 00:04:54.720
In fact, we don't have to do anything else
on this screen, except click the Start Import

00:04:54.720 --> 00:04:59.960
button in the lower right hand corner.,
Next, you'll see the output of the log

00:04:59.960 --> 00:05:03.720
shown, in a second tab.
The final line should say

00:05:03.720 --> 00:05:09.240
music_database.sql has finished.
Close this tab, and if you did

00:05:09.240 --> 00:05:14.627
close the left pane, reopen it now.
Select the schemas tab in the left pane.


00:05:15.440 --> 00:05:19.427
It doesn't look like anything was added, and
that's because we need to refresh the u i.


00:05:20.240 --> 00:05:23.205
That's the little icon to the
right of the text, schemas.


00:05:24.120 --> 00:05:27.265
Clicking that, should now display
music as one of the schemas.


00:05:28.160 --> 00:05:32.326
Open the music folder.
Here you can see Data Objects Shown.


00:05:33.160 --> 00:05:38.267
These folders are shown, whether these objects
exist or not, allowing you to create new ones.


00:05:39.080 --> 00:05:43.240
Open the Tables Node next.
Now you can see this database has

00:05:43.240 --> 00:05:48.600
three tables, albums, artists and songs.
Let me show you what's called an Entity

00:05:48.600 --> 00:05:54.160
Relationship Diagram on a Slide.
An Entity Relationship Diagram

00:05:54.160 --> 00:05:59.000
is similar to a Class Diagram.
An Entity is a table in this case,

00:05:59.000 --> 00:06:03.680
so all three tables are shown here.
The column marked as a primary key is

00:06:03.680 --> 00:06:09.680
identified by the key icon, and P K letters.
The primary key is separated from the

00:06:09.680 --> 00:06:13.945
other columns as you can see.
The additional columns are listed.


00:06:14.880 --> 00:06:18.760
Relationships are shown with connector
lines, which describe how two tables,

00:06:18.760 --> 00:06:23.240
or entities relate, to one another.
Both of the relationships shown on

00:06:23.240 --> 00:06:27.425
this diagram are one to many, or many to
one, depending on how you look at it.


00:06:28.320 --> 00:06:32.680
If I read this document, I have songs,
and many songs may be on a single album,

00:06:32.680 --> 00:06:37.240
a record in the albums table.
The album id is included in the songs

00:06:37.240 --> 00:06:43.560
table, as what's called a foreign key column.
This column's purpose, in the songs table,

00:06:43.560 --> 00:06:48.046
is to specify the related record, which
makes joining the tables much easier.


00:06:48.920 --> 00:06:54.280
Albums may have many songs, but in this model,
an album has only one artist, so the artist id

00:06:54.280 --> 00:06:59.800
is a foreign key column on the albums table.
An artist however might be on many albums,

00:06:59.800 --> 00:07:02.295
so it has a one to many relationship with albums.


00:07:05.081 --> 00:07:07.901
Let's now see what this looks like in the MySQL WorkBench.

00:07:08.836 --> 00:07:11.777
We're going to use this database for many of the upcoming lectures,

00:07:11.777 --> 00:07:13.966
so it's kind of important that you understand it.


00:07:14.800 --> 00:07:18.766
The easiest way to do this is, click
on the music schema in the left pane.


00:07:19.600 --> 00:07:23.067
We'll use the schema inspector to
learn more about the music database.


00:07:23.840 --> 00:07:27.446
You can right click on the music
schema, and select schema inspector.


00:07:28.320 --> 00:07:31.840
Alternately, you can select the
third icon on the tool bar menu,

00:07:31.840 --> 00:07:37.760
third from the left, that has an i on it.
This opens a new tab, with a tabbed panel,

00:07:37.760 --> 00:07:43.665
and shows a few details about this schema, such
as table count, and an estimated database size.


00:07:44.560 --> 00:07:48.926
You might wonder why this has a table count
of 4, and we've only seen three tables.


00:07:49.760 --> 00:07:53.165
This count includes views, and I'll
talk more about the view in a minute.


00:07:54.080 --> 00:08:01.000
The tabs are labeled, tables, columns,
indexes, triggers, views, stored procedures,

00:08:01.000 --> 00:08:05.686
functions, grants and events.
Let's click on tables first.


00:08:06.560 --> 00:08:11.680
The main thing of interest here, is the column
labeled rows, which tells us how many records,

00:08:11.680 --> 00:08:15.165
are in each table.
Now let's click columns.


00:08:16.080 --> 00:08:20.726
This shows the columns for all the tables, as
well as the view, which is named album view.


00:08:21.600 --> 00:08:26.425
You can see the column name, and types, and
whether nulls are supported in each for example.


00:08:27.360 --> 00:08:31.960
In all cases, except the id fields,
the values can be null, meaning not

00:08:31.960 --> 00:08:36.886
every column is required to have data.
Let's look at the indexes tab next.


00:08:37.760 --> 00:08:42.120
In this case, we can see each table
has a primary index, which is unique,

00:08:42.120 --> 00:08:46.520
and the column used is shown here.
In addition, there's an index for each

00:08:46.520 --> 00:08:51.847
foreign key, and this index isn't unique.
Let's now take a look at some of the data.


00:08:52.762 --> 00:08:58.440
I'll open the tables node, and click on albums.
Notice the three icons that appear when this

00:08:58.440 --> 00:09:01.400
table is selected.
The icon we want is the last,

00:09:01.400 --> 00:09:06.320
the spreadsheet like one.
Clicking on that opens another tab,

00:09:06.320 --> 00:09:09.040
with two panels.
The top bottom

00:09:09.040 --> 00:09:14.806
shows the SQL statement that was executed.
The bottom panel lists the data in the table.


00:09:15.640 --> 00:09:19.706
If this is your first look at an SQL
statement, this is a very common statement.


00:09:20.560 --> 00:09:25.520
The SELECT command will get the data.
A list of columns would follow this command,

00:09:25.520 --> 00:09:29.902
but if you enter an asterisk or star, you're
specifying you want the data in every column.


00:09:31.000 --> 00:09:34.560
The FROM clause will specify what table
or view the data should come from,

00:09:34.560 --> 00:09:39.400
so here it's coming from the albums table.
Notice though that the albums table includes

00:09:39.400 --> 00:09:44.960
the schema or database name.
Ok, so that's a super quick look

00:09:44.960 --> 00:09:50.640
at this work bench, and the music database.
I want to encourage you to use this database,

00:09:50.640 --> 00:09:54.720
to get familiar with work bench.
You can always delete the music

00:09:54.720 --> 00:09:58.624
database and re import it, so try to
spend some time here, if you have it.


00:09:59.600 --> 00:10:02.026
Before I end this video, I
want to look at the view.


00:10:02.880 --> 00:10:09.760
A view is sort of a virtual table.
Let's open the Views node, and select

00:10:09.760 --> 00:10:16.680
album view, and again select that last icon.
This will do the same thing as we saw with albums,

00:10:16.680 --> 00:10:20.000
so the query will be on top, and
the data on the bottom panel.


00:10:21.000 --> 00:10:25.286
Here, the data doesn't have any IDs,
and has data from all three tables.


00:10:26.120 --> 00:10:29.406
This is a full look or view of all
the pertinent data in all the tables.


00:10:30.320 --> 00:10:35.040
Let's look at data for just a single album.
To do this, I need to add a where

00:10:35.040 --> 00:10:39.480
clause to my select statement.
A where clause takes a column name,

00:10:39.480 --> 00:10:43.982
so in this case I want to search by an album name,
and I want that album name to be equal to Argus.


00:10:45.000 --> 00:10:50.280
Strings are always enclosed in single quotes.
To execute this query, I can choose the

00:10:50.280 --> 00:10:53.240
lightning bolt icon.
There's two lightning

00:10:53.240 --> 00:10:58.560
bolts and either would execute this statement.
The first is a bit more flexible, because it let's

00:10:58.560 --> 00:11:02.986
you select a portion of a complex statement,
and execute only that selected portion.


00:11:03.840 --> 00:11:06.307
If you have no selection, you can execute either.

00:11:08.869 --> 00:11:10.747
Now, the data in the bottom panel,

00:11:10.760 --> 00:11:14.160
the result grid, is showing the
songs for only the Argus album,

00:11:14.160 --> 00:11:20.400
which is an album by the artist, Wishbone Ash.
Remember, album name is stored in the album table,

00:11:20.400 --> 00:11:24.786
artist name is stored in the artists table,
and song title is in the songs table.


00:11:25.640 --> 00:11:29.886
A view is a SQL SELECT statement,
that's saved, and given a name.


00:11:30.720 --> 00:11:35.907
The data's not saved in the view, only the SQL
statement is saved, that will return that data.


00:11:36.720 --> 00:11:41.280
We can use this view's name to easily query data.
You can think of the view as a

00:11:41.280 --> 00:11:44.800
type of encapsulation.
It's hiding information about the

00:11:44.800 --> 00:11:50.840
table structures and relationships, and displaying
only the columns deemed necessary for the client.


00:11:50.840 --> 00:11:55.000
In fact, the client might never have to know
that this data is stored in three tables.


00:11:55.920 --> 00:12:00.680
When a table's structure changes, the view may
not have to change, so any software reliant

00:12:00.680 --> 00:12:06.360
on these structures, can remain unaffected.
I'll click on album view again in the left pane,

00:12:06.360 --> 00:12:09.371
but this time I'll select the
second icon, the tool icon.


00:12:11.262 --> 00:12:15.920
This will display the stored query, in a tab.
This statement consists of

00:12:15.920 --> 00:12:20.440
DDL and DML statements.
It's creating a database object,

00:12:20.440 --> 00:12:25.126
a view, named album view with Database
Definition language, the command Create.


00:12:26.041 --> 00:12:30.960
And it's storing a DML SELECT statement.
This select statement is executed,

00:12:30.960 --> 00:12:35.160
when we select data from the view.
Notice that the FROM clause,

00:12:35.160 --> 00:12:39.347
is selecting data from all three of
our tables, using a series of JOINS.


00:12:40.160 --> 00:12:42.647
I'm not going to get into the
details of this statement.


00:12:43.440 --> 00:12:47.600
The main thing is, that this view has all the
information we'd want to query about the albums,

00:12:47.600 --> 00:12:51.000
artists and songs, and our java
code doesn't have to understand

00:12:51.000 --> 00:12:55.600
too many details of the schema itself.
We'll be using this view in a lot of our

00:12:55.600 --> 00:13:00.442
java code, which means we don't have to write
code, with these joins in our java code.


00:13:01.397 --> 00:13:05.520
Ok, so I'll end this video here.
In the next video, I'll show you how

00:13:05.520 --> 00:13:09.600
to connect to this database, from
a Java application, so lets' go.
